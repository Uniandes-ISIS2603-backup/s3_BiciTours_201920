{
	"info": {
		"_postman_id": "0fe67cd8-91f8-49f9-9cf3-77ff6fb9545b",
		"name": "Comentario Tests",
		"description": "Colección de pruebas sobre el recurso Editorial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un comentario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "500280b8-fdb9-47d3-88aa-310720cb6e31",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_c\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"texto\":\"Norma\",\n\t\"calificacion\": 2\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva editorial. El recurso solo tiene de atributo \"name\" que debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un comentario con calificacion fuera de rango",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eac3c237-69c1-4930-8200-7b5fc71f3222",
						"exec": [
							"tests[\"No crea con calificacion fuera de rango\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"La calificación tiene que estar entre 1 y 5.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"texto\":\"Norma\",\n\t\"calificacion\": 6\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva editorial pero con un nombre que ya existe. Verifica que se genera el error y el mensaje \"Ya existe una Editorial con el nombre\".\r\n\r\n**Código HTTP esperado: 412 Precondition failed\".**"
			},
			"response": []
		},
		{
			"name": "Crear un comentario con texto fuera de límite",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "304084ed-d326-4e9b-b66a-8c2c95b18e0b",
						"exec": [
							"tests[\"No crea con calificacion fuera de rango\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El mensaje no puede superar los 250 caracteres.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"texto\":\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia vo.\",\n\t\"calificacion\": 2\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo libro. El ISBN del recurso debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un comentario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1ba3a9f-12f2-4dea-8ed8-328c08edb346",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"texto\": \"UPDATE\",\n    \"calificacion\": 3\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios/{{new_id_c}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios",
						"{{new_id_c}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza una editorial existente. El recurso solo tiene de atributo \"name\" que debe ser único. se envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un comentario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9df8d7c-f845-4e0d-b244-f10ecadbbf44",
						"exec": [
							"tests[\"No actualiza con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /Comentarios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"texto\": \"UPDATE\",\n    \"calificacion\": 3\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza una editorial que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /editorials/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener todos los comentarios",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75d835cf-17fb-4929-b876-886f8a88b969",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"comentarios count\"] = data.length > 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta todas las editoriales de la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de editoriales en la respuesta tenga mas de una.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un comentario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72eef936-ea33-42c0-b849-f74c32c1e6c6",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios/{{new_id_c}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios",
						"{{new_id_c}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una editorial de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id de la editorial deseada por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un comentario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "521005a5-fdc4-4a18-9b70-ed56c3a72d2f",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /Comentarios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una editorial que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /editorials/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un comentario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbc923bd-eb17-44c4-8151-b3acec604364",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios/{{new_id_c}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios",
						"{{new_id_c}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una editorial. Se envía el id de la entidad creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un comentario que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "89d81851-eeab-4e87-b483-8179a61e9ce7",
						"exec": [
							"tests[\"No borra con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /Comentarios/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_bicitours-api/api/comentarios/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_bicitours-api",
						"api",
						"comentarios",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra una editorial que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /editorials/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2d0e0620-f501-4edf-ac66-69de3bdf924f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7b78492d-c46e-4d6a-8d90-f7dc92e1d0ac",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}